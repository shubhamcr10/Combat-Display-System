name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  setup-environment:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake gcc g++ build-essential
        sudo apt-get install -y curl
        sudo apt-get install -y libssl-dev
        sudo apt-get install -y libasio-dev
        sudo apt-get install -y libtinyxml2-dev

    - name: Install Qt5
      run: |
        sudo apt-get install -y qtbase5-dev qt5-qmake qml-module-qtquick-controls2 qtdeclarative5-dev

    - name: Cache Micro XRCE-DDS Agent
      uses: actions/cache@v3
      with:
        path: /usr/local
        key: ${{ runner.os }}-xrce-agent-${{ hashFiles('path/to/agent/CMakeLists.txt') }}
        restore-keys: |
          ${{ runner.os }}-xrce-agent-

    - name: Cache Micro XRCE-DDS Client
      uses: actions/cache@v3
      with:
        path: /usr/local
        key: ${{ runner.os }}-xrce-client-${{ hashFiles('path/to/client/CMakeLists.txt') }}
        restore-keys: |
          ${{ runner.os }}-xrce-client-

    - name: Cache Qt5
      uses: actions/cache@v3
      with:
        path: /usr/lib/x86_64-linux-gnu
        key: ${{ runner.os }}-qt5-${{ hashFiles('/usr/lib/x86_64-linux-gnu/*') }}
        restore-keys: |
          ${{ runner.os }}-qt5-

    - name: Install Micro XRCE-DDS Agent
      if: steps.cache-micro-xrce-dds-agent.outputs.cache-hit != 'true'
      run: |
        git clone https://github.com/eProsima/Micro-XRCE-DDS-Agent.git
        cd Micro-XRCE-DDS-Agent
        mkdir build && cd build
        cmake ..
        make
        sudo make install

    - name: Install Micro XRCE-DDS Client
      if: steps.cache-micro-xrce-dds-client.outputs.cache-hit != 'true'
      run: |
        git clone https://github.com/eProsima/Micro-XRCE-DDS-Client.git
        cd Micro-XRCE-DDS-Client
        mkdir build && cd build
        cmake ..
        make
        sudo make install
        sudo ldconfig /usr/local/lib/

    - name: Cache CMake files
      uses: actions/cache@v3
      with:
        path: build
        key: ${{ runner.os }}-cmake-${{ hashFiles('CMakeLists.txt') }}
        restore-keys: |
          ${{ runner.os }}-cmake-

    - name: Check installed packages
      run: |
        ls -l /usr/local/lib | grep microcdr
        ls -l /usr/local/bin | grep MicroXRCEAgent

    - name: Debug cache paths
      run: |
        echo "Micro XRCE-DDS Agent Path:"
        ls -l /usr/local/bin/MicroXRCEAgent
        echo "Micro XRCE-DDS Client Path:"
        ls -l /usr/local/lib | grep libmicrourcdds

  build:
    needs: setup-environment
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Build the project
      run: |
        mkdir -p build
        cd build
        cmake ..
        make

  analyze:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: CodeQL Analysis
      uses: github/codeql-action/init@v1
      with:
        languages: cpp

    - name: Perform CodeQL Analysis
      run: |
        codeql database create --language=cpp --output=codeql-db
        codeql database analyze codeql-db --format=sarif-latest --output=codeql-analysis.sarif

  format:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Clang-Format
      run: sudo apt-get install -y clang-format

    - name: Format code
      run: clang-format -i **/*.cpp **/*.h

    - name: Check for formatting issues
      run: git diff --exit-code
